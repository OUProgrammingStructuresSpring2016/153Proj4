Milestones

1. 	Use keyboard input to get information from the user.
		We met this milestone. The program takes in input from the user.
		
2. 	Use text file I/O to read and write text files.
		We met this milestone. Within MediaDatabase.java, the method outputToFile creates
		a new text file which saves the user's search results should they request it, and the
		parse methods within the main, readTVToMDb and readMovieToMDb work.

3. 	Create classes to store data on movies and broadcast series. Note that you should
	create any additional classes (abstract and/or concrete) and/or interfaces you deem
	necessary to arrive at a good design.
 		We met this milestone. We implemented concrete Movie, TVSeries, and TVEpisode classes
 		to represent data on movies and broadcast series. TVSeries and Movie both extend the
 		abstract Media class.
 		
 4.	Implement both the Comparable and Comparator interfaces to compare one movie or
	broadcast series to another.
		We met this milestone. By implementing Comparable on the Media class (which Movie and TVSeries extend),
		we can compare titles of Media against each other. Additionally, there is an inner static YearComparator class
		in Media to compare Media based on years.
		
5.	Use a List to store, retrieve, and display data related to movies and broadcast series as
	described below [in the project description].
		We met this milestone. The MediaDatabase class uses two ArrayLists to store TVSeries and Movie objects
		to search. The unit tests for each of the search methods works as intended.
		
6.	Use the sort() and binarySearch() methods from the Collections class to sort and
	search for data related to movies and broadcast series as described below.
		We met this milestone. The searchTVTitleExact and searchMovieTitleExact methods within 
		the MediaDatabase class utilize binary search methods to find the specified Media object.
		Obviously, the list must be sorted before binary searches can occur, which is done in the 
		MediaDbDriver class.